apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes 3;

    error_log /var/log/nginx/error.log debug;
    pid /var/run/nginx.pid;

    events {
      worker_connections 10240;
    }

    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      proxy_http_version 1.1;

      log_format main 'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'upstream:$upstream_addr\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';

      access_log /var/log/nginx/access.log main;

      sendfile on;

      keepalive_timeout 65;
      upstream api {
        server counter.default.svc.cluster.local:3000;
        keepalive 32;
      }

      server {

        listen 80 default_server;
        server_name _;

        add_header X-Response-Time "$request_time";
        add_header X-Request-Start "$msec";

        #prevent access to hidden files
        location ~* (?:^|/)\. {
          deny all;
        }


        location / {
          proxy_pass http://counter.default.svc.cluster.local:3000;
          add_header Cache-Control 'no-cache';
          add_header x-path 'api';
          add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;" always;
        }

      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-c
  labels:
    app: nginx-c
    service: nginx-c
spec:
  type: ClusterIP
  ports:
  - port: 80
    name: http
  selector:
    app: nginx-c
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: nginx-c
  labels:
    app: nginx-c
    version: v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-c
        version: v1
    spec:
      containers:
      - name: nginx-c
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf # mount nginx-conf volumn to /etc/nginx
          readOnly: true
          name: nginx-conf
          subPath: nginx.conf
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf # place configmap `nginx-conf` on /etc/nginx
---
##################################################################################################
# redis service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
    service: redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    name: redis
  selector:
    app: redis
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
    version: v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        version: v1
    spec:
      containers:
      - name: redis
        image: redis:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
---
##################################################################################################
# backend service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    app: backend
    service: backend
spec:
  ports:
  - port: 5000
    name: http
  selector:
    app: backend
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
    version: v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: backend
        version: v1
    spec:
      containers:
      - name: backend
        image: sumanta23/counter:latest
        args:
          - node
          - backend.js
        imagePullPolicy: Always
        env:
          - name: REDIS_HOST
            value: "redis.default.svc.cluster.local"
          - name: DEBUG
            value: "*"
        ports:
        - containerPort: 5000
---
##################################################################################################
# frontend service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: counter
  labels:
    app: counter
    service: counter
spec:
  clusterIP: 10.100.224.73
  ports:
  - port: 3000
    name: http
  selector:
    app: counter
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: counter
  labels:
    app: counter
    version: v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: counter
        version: v1
    spec:
      containers:
      - name: counter
        image: sumanta23/counter:latest
        args:
          - node
          - server.js
        imagePullPolicy: Always
        env:
          - name: BACK_END
            value: "backend.default.svc.cluster.local:5000"
          - name: DEBUG
            value: "*"
        ports:
        - containerPort: 3000
---
